[http]
	version = HTTP/2
	postBuffer = 157286400

[alias]
	co = checkout
	cob = checkout -b
	coo = !git fetch && git checkout
	br = branch
	brd = branch -d
	brD = branch -D
	merged = branch --merged
	s = status -s
	st = status
	aa = add -A .
	cm = commit -m
	aacm = !git add -A . && git commit
	aacm = !git add -A . && git commit -m
	cp = cherry-pick
	amend = commit --amend -m --reuse-message=HEAD
	dev = !git checkout dev && git pull origin dev
	staging = !git checkout staging && git pull origin staging
	main = !git checkout main && git pull origin 
	master = !git checkout master && git pull origin 
	po = push origin
	pu = !git push origin `git branch --show-current`
	pod = push origin dev
	pos = push origin staging
	pom = push origin main
	poh = push origin HEAD
	pogm = !git push origin gh-pages && git checkout master && git pull origin master && git rebase gh-pages && git push origin master && git checkout gh-pages
	pomg = !git push origin master && git checkout gh-pages && git pull origin gh-pages && git rebase master && git push origin gh-pages && git checkout master
	plo = pull origin
	plod = pull origin dev
	plos = pull origin staging
	plom = pull origin main
	ploh = pull origin HEAD
	unstage = reset --soft HEAD^
	l = log --pretty=oneline -n 20 --graph --abbrev-commit
	ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	f = "!git ls-files | grep -i"
	gr = grep -Ii
	la = "!git config -l | grep alias | cut -c 7-"
	d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
	di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
	tags = tag -l
	branches = branch -a
	remotes = remote -v
	graph = log --graph --color --pretty=format:"%C(yellow)%H%C(green)%d%C(reset)%n%x20%cd%n%x20%cn%x20(%ce)%n%x20%s%n"

	# Codereview aliases
	change = codereview change
	gofmt = codereview gofmt
	mail = codereview mail
	pending = codereview pending
	submit = codereview submit
	sync = codereview sync

[core]
	editor = nvim

[color]

	# Use colors in Git commands that are capable of colored output when
	# outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
	ui = auto

[color "branch"]

	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]

	meta = yellow bold
	frag = magenta bold # line info
	old = red # deletions
	new = green # additions

[color "status"]

	added = yellow
	changed = green
	untracked = cyan

[diff]

	# Detect copies as well as renames
	renames = copies
